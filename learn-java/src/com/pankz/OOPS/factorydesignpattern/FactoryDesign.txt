
Factory Design Pattern---->It focuses on how to create the objects
so it says there should be a interface/abstract classes/protocol which talks about the object creation
but the subclass or entity that is confirming to that protocol should be responsible for identifying what
type of object is to be created




  OS obj=new Android();  If we run this code it will print android os but we are providing the implementation here
        If in future we have to change it from android to ios we have to change this code and recompile it.
        It means our client knows which class you are working with coz we are using "Android" keyword here
        So Factory pattern says instead of creating that way object what you can create is
        Create a class as OperatingFactory which will give you object of those particular OS
        So we have to expose it from the client */
       obj.spec();

       In future if any changes occur you need not to change from client side you have to do modification only in your factory

       In this we create objects without exposing the creation logic to the client and "refer to newly created object using common interface"